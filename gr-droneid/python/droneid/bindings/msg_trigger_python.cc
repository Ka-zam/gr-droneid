/*
 * Copyright 2022 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(msg_trigger.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(a434162649fc0947989701ba05eb8aba)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/droneid/msg_trigger.h>
// pydoc.h is automatically generated in the build directory
#include <msg_trigger_pydoc.h>

void bind_msg_trigger(py::module& m)
{

    using msg_trigger    = ::gr::droneid::msg_trigger;


    py::class_<msg_trigger, gr::block, gr::basic_block,
        std::shared_ptr<msg_trigger>>(m, "msg_trigger", D(msg_trigger))

        .def(py::init(&msg_trigger::make),
           py::arg("threshold"),
           D(msg_trigger,make)
        )
        




        
        .def("set_threshold",&msg_trigger::set_threshold,       
            py::arg("arg0"),
            D(msg_trigger,set_threshold)
        )

        ;




}








